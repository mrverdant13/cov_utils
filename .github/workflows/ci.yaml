name: Dart CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  min-conditions:
    name: Format and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
      - run: dart pub global activate melos ^1.0.0-dev.10
      - run: melos bs
      - run: melos run FA:ci

  test:
    name: Test implementation
    needs: min-conditions
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
      - run: dart pub global activate melos ^1.0.0-dev.10
      - run: dart pub global activate coverage
      - run: dart pub global activate --source path .
      - run: melos bs
      - run: melos run TMC:ci
      - uses: actions/upload-artifact@v2
        if: matrix.os == "ubuntu-latest"
        with:
          name: filtered.lcov.info
          path: ./coverage/filtered.lcov.info
          retention-days: 1

  codecov:
    name: Publish coverage results
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: filtered.lcov.info
          path: ./coverage/filtered.lcov.info
      - uses: codecov/codecov-action@v2
        with:
          files: ./coverage/filtered.lcov.info
          fail_ci_if_error: true
          verbose: true

  pana:
    name: Check pub score
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
      - run: dart pub global activate melos ^1.0.0-dev.10
      - run: dart pub global activate pana
      - run: melos bs
      - run: melos run P
